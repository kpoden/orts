@import url(https://fonts.googleapis.com/css2?family=Prosto+One&display=swap);@import url(https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&family=Prosto+One&display=swap);:root{--bg-primary: #1E1E1E;--c-font-regular: #3A4047;--c-font-white: #f5f5f5;--c-font-secondary: #8d8d8d;--c-button-border: #3b3b3b;--c-section-border: #000000;--c-link: #000000;--c-form-invalid: #f00;--c-valid: #62c584;--border-section: 1px solid #000;--ff-regular: "Montserrat", "Arial", sans-serif;--fz-regular: 18px;--gutter-wrapper: 100px;--pop-fade-in-up: all 0.5s ease-out;--border-radius-btn: 12px;--z-modal: 1000;--z-burger: 999;--z-header: 998}*{-webkit-box-sizing:border-box;box-sizing:border-box;outline:0;padding:0}*,h1,h2,h3,h4,h5,h6{margin:0}.container{max-width:1200px;margin:0 auto;color:var(--c-font-regular);overflow:hidden}li,ul{list-style:none}a{text-decoration:none;color:inherit}.orts-header-container .orts-header{padding-top:26px;padding-bottom:26px}.orts-header-container .orts-header--inner{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.orts-header-container .orts-header--logo{width:90px;height:38px}.orts-header-container .orts-header-menu{font-family:'Inter',sans-serif;width:350px}.orts-header-container .orts-header-menu--list{display:-webkit-box;display:-ms-flexbox;display:flex}.orts-header-container .orts-header-menu--link{font-weight:700;font-size:16px;line-height:24px;margin-right:40px}.orts-header-container .orts-header--phone-num{font-family:'Prosto One';font-style:normal;font-weight:400;font-size:24px;line-height:44px}.main .orts-slider{background:#000}.main .orts-slider-slide{border-radius:40px;overflow:hidden}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
